{"version":3,"sources":["Listitems.js","App.js","reportWebVitals.js","index.js"],"names":["Listitems","props","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentTime","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAiCeA,MA5Bf,SAAmBC,GACf,IACMD,EADQC,EAAMC,MACIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAY,OAAjB,SACH,8BACA,uBAAOC,KAAK,OACZC,GAAMH,EAAKI,IACXC,MAASL,EAAKM,KACdC,SAAU,SAACC,GACdX,EAAMY,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QACjC,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAU,kBAAMf,EAAMgB,WAAWb,EAAKI,cATVJ,EAAKI,QAejD,OACI,8BACA,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACCnB,O,eCnBToB,IAAQC,IAAIC,K,IAsFGC,E,kDAnFb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACXtB,MAAO,GACPuB,YAAY,CACVf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,+CAelB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,qBAKhB,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACQ,KAAjBA,EAAQxB,KAAY,CACrB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACvCL,KAAKC,SAAS,CACZ5B,MAAOmC,EACPZ,YAAY,CACVf,KAAM,GACNF,IAAK,S,wBAMb,SAAWA,GACT,IAAM8B,EAAeT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAC/CA,EAAKI,MAAMA,KACbqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,uBAKX,SAAU5B,EAAKF,GACb2B,QAAQC,IAAI,SAASP,KAAKL,MAAMtB,OAChC,IAAMA,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZ2B,QAAQC,IAAIhC,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfmB,KAAKC,SAAS,CACZ5B,MAAOA,M,oBAIX,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACA,4CACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAC7BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACjB,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAQ2B,KAAKL,MAAMtB,MAC9Be,WAAaY,KAAKZ,WAClBJ,UAAWgB,KAAKhB,mB,GA9EN6B,IAAMC,WCETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1ade07e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Listitems.css'\r\nimport FlipMove from 'react-flip-move';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Listitems(props){\r\n    const items = props.items;\r\n    const Listitems = items.map(item =>\r\n        {\r\n            return <div className = \"list\" key={item.key}>\r\n                <p>\r\n                <input type=\"text\" \r\n                id = {item.key}\r\n                value = {item.text}\r\n                onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon=\"trash\"\r\n                    onClick={ () => props.deleteItem(item.key)}\r\n                    />\r\n                </span>\r\n                </p>\r\n            </div>\r\n        })\r\n    return(\r\n        <div>\r\n        <FlipMove duration={500} easing=\"ease-in-out\">\r\n        {Listitems}\r\n        </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Listitems;","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Listitems from './Listitems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currentTime:{\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentTime:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentTime;\n    console.log(newItem)\n    if(newItem.text !== \"\"){\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentTime:{\n          text: '',\n          key: ''\n        }\n      })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <h1>To-do List</h1>\n            <input type=\"text\" placeholder=\"Enter text\"\n              value={this.state.currentTime.text} \n              onChange={this.handleInput}/>\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <Listitems items= {this.state.items}\n        deleteItem ={this.deleteItem}\n        setUpdate={this.setUpdate}></Listitems>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}